% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BuildRef.R
\name{Build-Reference-methods}
\alias{Build-Reference-methods}
\alias{getResources}
\alias{buildRef}
\alias{getNonPolyARef}
\title{Builds reference files used by SpliceWiz}
\usage{
getResources(
  reference_path = "./Reference",
  fasta = "",
  gtf = "",
  overwrite = FALSE,
  force_download = FALSE
)

buildRef(
  reference_path = "./Reference",
  fasta = "",
  gtf = "",
  overwrite = FALSE,
  force_download = FALSE,
  chromosome_aliases = NULL,
  genome_type = "",
  nonPolyARef = "",
  MappabilityRef = "",
  BlacklistRef = "",
  useExtendedTranscripts = TRUE,
  lowMemoryMode = TRUE
)

getNonPolyARef(genome_type)
}
\arguments{
\item{reference_path}{(REQUIRED) The directory path to store the generated
reference files}

\item{fasta}{The file path or web link to the user-supplied genome
FASTA file. Alternatively, the name of the AnnotationHub record containing
the genome resource. May be omitted if \code{getResources()} has already
been run using the same \code{reference_path}.}

\item{gtf}{The file path or web link  to the user-supplied transcript
GTF file (or gzipped GTF file). Alternatively, the name of the
AnnotationHub record containing the transcript GTF file. May be omitted if
\code{getResources()} has already been run using the same
\code{reference_path}.}

\item{overwrite}{(default \code{FALSE}) For \code{getResources()}: if the
genome FASTA and gene annotation GTF files already exist in the \code{resource}
subdirectory, it will not be overwritten. For \code{buildRef()} and
\code{buildFullRef()}: the SpliceWiz reference will not be overwritten
if one already exist. A reference is considered to exist if
the file \code{SpliceWiz.ref.gz} is present inside \code{reference_path}.}

\item{force_download}{(default \code{FALSE}) When online resources are retrieved,
a local copy is stored in the \code{SpliceWiz} BiocFileCache. Subsequent calls
to the web resource will fetch the local copy. Set \code{force_download} to
\code{TRUE} will force the resource to be downloaded from the web. Set this to
\code{TRUE} only if the web resource has been updated since the last retrieval.}

\item{chromosome_aliases}{(Highly optional) A 2-column data frame containing
chromosome name conversions. If this is set, allows \link{processBAM} to parse
BAM alignments to a genome whose chromosomes are named
differently to the reference genome. The most common scenario is where
Ensembl genome typically use chromosomes "1", "2", ..., "X", "Y", whereas
UCSC/Gencode genome use "chr1", "chr2", ..., "chrX", "chrY".
Refer to \url{https://github.com/dpryan79/ChromosomeMappings} for a
list of chromosome alias resources.}

\item{genome_type}{Allows \code{buildRef()} to select default
\code{nonPolyARef} and \code{MappabilityRef} for selected genomes. Allowed options
are: \code{hg38}, \code{hg19}, \code{mm10}, and \code{mm9}.}

\item{nonPolyARef}{(Optional) A BED file of regions defining known
non-polyadenylated transcripts. This file is used for QC analysis
to measure Poly-A enrichment quality of samples. An RDS file (openable
using \code{readRDS()}) of a GRanges object is acceptable.
If omitted, and \code{genome_type} is defined, the default for the specified
genome will be used.}

\item{MappabilityRef}{(Optional) A BED file of low mappability regions due to
repeat elements in the genome. If omitted, the file generated by
\code{\link[=calculateMappability]{calculateMappability()}} will be used where available, and if
this is not, the default file for the specified \code{genome_type} will be used.
If \code{genome_type} is not specified, \code{MappabilityRef} is not used.
An RDS file (openable using \code{readRDS()}) of a GRanges object is acceptable.
See details.}

\item{BlacklistRef}{A BED file of regions to be otherwise excluded from IR
analysis. If omitted, a blacklist is not used (this is the default).
An RDS file (openable using \code{readRDS()}) of a GRanges object is acceptable.}

\item{useExtendedTranscripts}{(default \code{TRUE}) Should non-protein-coding
transcripts such as anti-sense and lincRNA transcripts be included in
searching for IR / AS events? Setting \code{FALSE} (vanilla IRFinder) will
exclude transcripts other than \code{protein_coding} and
\code{processed_transcript} transcripts from IR analysis.}

\item{lowMemoryMode}{(default \code{TRUE}) By default, SpliceWiz converts FASTA
files to TwoBit, then uses the TwoBit file to fetch genome sequences. In
most cases, this method uses less memory and is faster, but can be very
slow on some systems. Set this option to \code{FALSE} (which will convert the
TwoBit file back to FASTA) if you experience
very slow genome fetching (e.g. when annotating splice motifs).}
}
\value{
For \code{getResources}: creates the following local resources:
\itemize{
\item \code{reference_path/resource/genome.2bit}: Local copy of the genome sequences
as a TwoBitFile.
\item \code{reference_path/resource/transcripts.gtf.gz}: Local copy of the gene
annotation as a gzip-compressed file.
}

For \code{buildRef()} and \code{buildFullRef()}: creates a SpliceWiz reference
which is written to the given directory specified by \code{reference_path}.
Files created includes:
\itemize{
\item \code{reference_path/settings.Rds}: An RDS file containing parameters used
to generate the SpliceWiz reference
\item \code{reference_path/SpliceWiz.ref.gz}: A gzipped text file containing collated
SpliceWiz reference files. This file is used by \link{processBAM}
\item \verb{reference_path/fst/}: Contains fst files for subsequent easy access to
SpliceWiz generated references
\item \code{reference_path/cov_data.Rds}: An RDS file containing data required to
visualise genome / transcript tracks.
}

For \code{getNonPolyARef()}: Returns the file path to the BED file for
the nonPolyA loci for the specified genome.
}
\description{
These function builds the reference required by the SpliceWiz engine, as well
as alternative splicing annotation data for SpliceWiz. See examples
below for guides to making the SpliceWiz reference.
}
\details{
\code{getResources()} processes the files, downloads resources from
web links or from \code{AnnotationHub()}, and saves a local copy in the "resource"
subdirectory within the given \code{reference_path}. Resources are retrieved via
either:
\enumerate{
\item User-supplied FASTA and GTF file. This can be a file path, or a web link
(e.g. 'http://', 'https://' or 'ftp://'). Use \code{fasta} and \code{gtf}
to specify the files or web paths to use.
\item AnnotationHub genome and gene annotation (Ensembl): supply the names of
the genome sequence and gene annotations to \code{fasta} and \code{gtf}.
}

\code{buildRef()} will first run \code{getResources()} if resources are
not yet saved locally (i.e. \code{getResources()} is not already run).
Then, it creates the SpliceWiz references. Typical run-times are
5 to 10 minutes for human and mouse genomes (after resources are downloaded).

NB: the parameters \code{fasta} and \code{gtf} can be omitted in \code{buildRef()} if
\code{getResources()} is already run.

\code{getNonPolyARef()} returns the path of the non-polyA reference file for the
human and mouse genomes.

Typical usage involves running \code{buildRef()} for human and mouse genomes
and specifying the \code{genome_type} to use the default \code{MappabilityRef} and
\code{nonPolyARef} files for the specified genome. For non-human non-mouse
genomes, use one of the following alternatives:
\itemize{
\item Create the SpliceWiz reference without using Mappability Exclusion regions.
To do this, simply run \code{buildRef()} and omit \code{MappabilityRef}. This is
acceptable assuming the introns assessed are short and do not contain
intronic repeats
\item Calculating Mappability Exclusion regions: see \link{Mappability-methods} for
an example workflow using the Rsubread aligner
}

BED files are tab-separated text files containing 3 unnamed columns
specifying chromosome, start and end coordinates. To view an example BED
file, open the file specified in the path returned by
\code{getNonPolyARef("hg38")}
}
\section{Functions}{
\itemize{
\item \code{getResources}: Processes / downloads a copy of the
genome and gene annotations and stores this in the "resource" subdirectory
of the given reference path

\item \code{buildRef}: First calls \code{getResources()}
(if required). Afterwards creates the SpliceWiz reference in the
given reference path

\item \code{getNonPolyARef}: Returns the path to the BED file
containing coordinates of known non-polyadenylated transcripts for genomes
\code{hg38}, \code{hg19}, \code{mm10} and \code{mm9},
}}

\examples{
# Quick runnable example: generate a reference using SpliceWiz's example genome

example_ref <- file.path(tempdir(), "Reference")
getResources(
    reference_path = example_ref,
    fasta = chrZ_genome(),
    gtf = chrZ_gtf()
)
buildRef(
    reference_path = example_ref
)

# NB: the above is equivalent to:

example_ref <- file.path(tempdir(), "Reference")
buildRef(
    reference_path = example_ref,
    fasta = chrZ_genome(),
    gtf = chrZ_gtf()
)

# Get the path to the Non-PolyA BED file for hg19

getNonPolyARef("hg19")

}
\seealso{
\link{Mappability-methods} for methods to calculate low mappability regions\cr\cr
\link[AnnotationHub]{AnnotationHub}\cr\cr
\url{https://github.com/alexchwong/SpliceWizResources} for RDS files of
Mappability Exclusion GRanges objects (for hg38, hg19, mm10 and mm9)
that can be use as input files for \code{MappabilityRef} in \code{buildRef()}.
These resources are intended for SpliceWiz users on older Bioconductor
versions (3.13 or earlier)
}
