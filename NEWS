Changes in version 0.99.7 (2022-11-01)
+ Implemented time series analysis in limma using splines
+ Reduced loading time of makeSE's overlapping intron removal
+ Optimised H5 database chunking to speed up data loading times
+ Added installation instructions for SpliceWiz using conda environment

Changes in version 0.99.6 (2022-10-27)
+ Ribbons in group-normalized coverage plots can now be customized to show
standard deviation (default), 95% confidence interval, 
standard error of the mean, or none.
+ ASE_satuRn analysis now shoots warning if rows with zero counts are detected

Changes in version 0.99.5 (2022-10-26)
+ Major feature: Junctions (split read counts and PSIs) are now visualized in
coverage plots! Individual tracks are now marked by sashimi-plot style arcs 
labeled with their corresponding split-read counts.
Group-wise coverage tracks are similarly annotated, but each junction (splice
donor-acceptor) are labeled with provisional PSIs. These are calculated based 
on the proportion of total split reads that utilise either either exon group 
from which the split read arises. This is enabled by setting 
plotJunctions = TRUE in the plotCoverage() function.
+ New Feature: Users can use the satuRn package to perform quasi-binomial
modelling of ASE counts.
+ New Feature: Reduced false positive novel ASEs. This was achieved by 
filtering of novel junctions by their abundance, allowing removal of low 
abundance novel junctions that may arise from mis-alignment or read errors. 
Also, the previously hard-coded restriction of novel junctions requiring one
splice site being annotated is now optional (and in our view now unnecessary). 
Filter parameters are set within the collateData() function.
+ New Feature: Intron retention analysis now provides EITHER IR-ratio OR PSI.
Users can select this using the "IRmode" parameter from within the ASE-methods
class of functions. Choices are "all" (all introns, IR-ratio), "annotated"
(annotated introns, IR-ratio), or "annotated_binary" (annotated introns, PSI).
+ Performance improvement: Row and column names have been removed from all
assays stored in H5 database. This substantially improves loading and
performance of NxtSE objects utilising on-disk (un-realized) memory.
+ NxtSE object now has 3 getter functions junc_PSI(), junc_counts() and
junc_gr() for getting (prelim) PSIs, counts and GRanges of junction counts.
The first two are DelayedMatrices linked using the makeSE() function. These
matrices are never subsetted by row but only by column. Furthermore, they are
only realized as on-memory matrices upon calling realize_NxtSE() and setting
`includeJunctions = TRUE`+ Minor improvement: plotCoverage() now correctly plots the correct strand.
Note datasets compiled from a mix of different strandedness protocols are not
supported, as samples are assumed to be sequenced from the same protocol.
+ Bugfix: broken annotation of ALEs for novel splice reference now fixed.
+ Bugfix: ASE_DESeq2: previously, inclusion / exclusion counts were normalised
prior to differential analysis using DESeq2. This is now fixed by specifying
sizefilters() <- 1
+ Bugfix: NMD data for introns - some 3'-UTR introns were mislabeled as CDS 
introns - now fixed
+ BUGFIX: fixed errors in ALE reference generation for novel reference

Changes in version 0.99.3 (2022-08-24)
+ Added support for novel splicing
  + This includes modifying the buildRef and (C++-internal) processBAM functions
  to annotate and count tandem junctions, and collateData function to compile
  SpliceWiz novel-ASE reference on-the-fly 
+ Added getter functions to view the SpliceWiz reference
+ Other misc bug fixes

Changes in version 0.99.2 (2022-07-23)
+ Added wrapper functions to use the STAR aligner to process fastq files
+ Added "SpliceWiz cookbook" vignette to illustrate functions involving
"real world" genomes / transcriptomes
+ Fixed bug that triggers error in ASE_limma() when two genes with different
gene_id have the same gene_name in the annotation. References built from prior
versions of SpliceWiz are not supported!
+ Bugfix for translating protein codons when source genome contains N's

Changes in version 0.99.0 (2022-06-02)
+ Bioconductor Submission